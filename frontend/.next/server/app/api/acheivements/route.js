(()=>{var e={};e.id=8810,e.ids=[8810],e.modules={96330:e=>{"use strict";e.exports=require("@prisma/client")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},37986:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>f,routeModule:()=>u,serverHooks:()=>v,workAsyncStorage:()=>p,workUnitAsyncStorage:()=>m});var s={};r.r(s),r.d(s,{GET:()=>c});var i=r(42706),n=r(28203),a=r(45994),o=r(39187),d=r(84908),l=r(31205);async function c(e){let{searchParams:t}=new URL(e.url),r=t.get("fields");try{if("names"===r){let e=(await d.A.ctf.findMany({select:{eventId:!0,event:{select:{title:!0}}}})).map(e=>({id:e.eventId,title:e.event.title}));return o.NextResponse.json(e)}let e=await (0,l.E)();return o.NextResponse.json(e)}catch(e){return e instanceof Error&&console.error(e.message),o.NextResponse.json({error:"Failed to fetch event names"},{status:500})}}let u=new i.AppRouteRouteModule({definition:{kind:n.RouteKind.APP_ROUTE,page:"/api/acheivements/route",pathname:"/api/acheivements",filename:"route",bundlePath:"app/api/acheivements/route"},resolvedPagePath:"C:\\Users\\czhon\\Documents\\GitHub\\SSMCT_Website\\frontend\\src\\app\\api\\acheivements\\route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:p,workUnitAsyncStorage:m,serverHooks:v}=u;function f(){return(0,a.patchFetch)({workAsyncStorage:p,workUnitAsyncStorage:m})}},96487:()=>{},78335:()=>{},84908:(e,t,r)=>{"use strict";r.d(t,{A:()=>i});var s=r(96330);let i=global.prisma||new s.PrismaClient({log:["query"]})},31205:(e,t,r)=>{"use strict";r.d(t,{E:()=>i});var s=r(84908);async function i(){let e=(await s.A.ctf.findMany({orderBy:[{placing:"asc"},{event:{date:"desc"}}],where:{NOT:{points:null}},select:{event:{select:{title:!0,description:!0,date:!0,roles:{where:{type:"ctf participant"},select:{linkedDiscordRole:{select:{userDiscordRoles:{select:{discordUser:{select:{id:!0,username:!0,user:{select:{realName:!0}}}}}}}},userRoles:{select:{user:{select:{id:!0,name:!0,realName:!0,discordId:!0}}}}}}}},members:{select:{user:{select:{name:!0,discordId:!0,realName:!0}}}},ctfId:!0,points:!0,placing:!0,link:!0,logo:!0,participants:!0}})).map(e=>{let t={};for(let r of e.members)r.user.discordId&&(t[r.user.discordId]={name:r.user.name??"",realName:r.user.realName??void 0});for(let r of e.event.roles[0]?.linkedDiscordRole?.userDiscordRoles??[])r.discordUser.id&&(t[r.discordUser.id]={name:r.discordUser.username,realName:r.discordUser.user?.realName??void 0});for(let r of e.event.roles[0]?.userRoles??[])r.user.discordId&&(t[r.user.discordId]={name:r.user.name??"",realName:r.user.realName??void 0});return{link:e.link,logo:e.logo,points:e.points,placing:e.placing?.toString()??"",ctfId:e.ctfId,title:e.event.title,description:e.event.description,members:Object.values(t),date:e.event.date}}),t={};for(let r of e){let e=r.date.getFullYear().toString();t[e]||(t[e]=[]),t[e].push(r)}return t}}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[638,5452],()=>r(37986));module.exports=s})();