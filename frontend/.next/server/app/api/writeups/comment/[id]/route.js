(()=>{var e={};e.id=8061,e.ids=[8061],e.modules={96330:e=>{"use strict";e.exports=require("@prisma/client")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},12412:e=>{"use strict";e.exports=require("assert")},79428:e=>{"use strict";e.exports=require("buffer")},55511:e=>{"use strict";e.exports=require("crypto")},94735:e=>{"use strict";e.exports=require("events")},81630:e=>{"use strict";e.exports=require("http")},55591:e=>{"use strict";e.exports=require("https")},11723:e=>{"use strict";e.exports=require("querystring")},79551:e=>{"use strict";e.exports=require("url")},28354:e=>{"use strict";e.exports=require("util")},74075:e=>{"use strict";e.exports=require("zlib")},80216:(e,r,s)=>{"use strict";s.r(r),s.d(r,{patchFetch:()=>v,routeModule:()=>g,serverHooks:()=>f,workAsyncStorage:()=>x,workUnitAsyncStorage:()=>h});var t={};s.r(t),s.d(t,{GET:()=>l,POST:()=>m});var i=s(42706),o=s(28203),n=s(45994),a=s(39187),u=s(84908),c=s(85562),d=s(30379);let p=d.z.object({content:d.z.string().min(1,"Comment cannot be empty").max(500,"Comment is too long")});async function l(e,{params:r}){try{let e=await r,s=parseInt(e.id);if(isNaN(s))return a.NextResponse.json({error:!0,message:"Invalid ID provided"},{status:400});let t=await u.A.comments.findMany({where:{writeupId:s},include:{user:{select:{name:!0,image:!0}}},orderBy:{date:"desc"}});return a.NextResponse.json({data:t})}catch(e){return console.error("Unexpected error:",e instanceof Error?e.message:e),a.NextResponse.json({error:!0,message:"An unexpected error occurred"},{status:500})}}async function m(e,{params:r}){try{let s=await r,t=parseInt(s.id),i=await (0,c.j)();if(!i)return a.NextResponse.json({error:"Unauthorized. Please login."},{status:401});let o=i.user?.id;if(!o)return a.NextResponse.json({error:"Invalid session. User ID is missing."},{status:400});if(isNaN(t))return a.NextResponse.json({error:!0,message:"Invalid ID provided"},{status:400});let n=await e.json(),d=p.safeParse(n);if(!d.success)return a.NextResponse.json({error:!0,message:d.error.errors.map(e=>e.message).join(", ")},{status:400});let l=await u.A.comments.create({data:{writeupId:t,comment:d.data.content,userId:o},include:{user:{select:{name:!0,image:!0}}}});return a.NextResponse.json({data:l})}catch(e){return console.error("Unexpected error:",e instanceof Error?e.message:e),a.NextResponse.json({error:!0,message:"An unexpected error occurred"},{status:500})}}let g=new i.AppRouteRouteModule({definition:{kind:o.RouteKind.APP_ROUTE,page:"/api/writeups/comment/[id]/route",pathname:"/api/writeups/comment/[id]",filename:"route",bundlePath:"app/api/writeups/comment/[id]/route"},resolvedPagePath:"C:\\Users\\czhon\\Documents\\GitHub\\SSMCT_Website\\frontend\\src\\app\\api\\writeups\\comment\\[id]\\route.ts",nextConfigOutput:"",userland:t}),{workAsyncStorage:x,workUnitAsyncStorage:h,serverHooks:f}=g;function v(){return(0,n.patchFetch)({workAsyncStorage:x,workUnitAsyncStorage:h})}},96487:()=>{},78335:()=>{},85562:(e,r,s)=>{"use strict";s.d(r,{$:()=>u,j:()=>c});var t=s(51825),i=s(64912),o=s(86259),n=s(84908);let a=async e=>{let r=process.env.DISCORD_GUILD_ID,s=await fetch("https://discord.com/api/v10/users/@me/guilds",{headers:{Authorization:`Bearer ${e}`}});if(!s.ok)throw console.error("Failed to fetch user's Discord guilds"),Error("Failed to fetch user's Discord guilds");return!!(await s.json()).some(e=>e.id===r)||(console.error("User is not in the required Discord guild"),!1)},u={adapter:(0,o.y)(n.A),pages:{signIn:"/",signOut:"/auth/signout",error:"/auth/signin",newUser:"/auth/new_user"},session:{strategy:"database"},providers:[(0,i.A)({clientId:process.env.DISCORD_CLIENT_ID,clientSecret:process.env.DISCORD_CLIENT_SECRET,authorization:{params:{scope:"identify guilds guilds.members.read"}},token:"https://discord.com/api/oauth2/token",userinfo:"https://discord.com/api/users/@me",profile:e=>({id:e.id,name:e.username,image:e.avatar?`https://cdn.discordapp.com/avatars/${e.id}/${e.avatar}.png`:null})})],callbacks:{async signIn({account:e,user:r}){if(!e||!r)return!1;if("discord"===e.provider){if(console.log(e),!e.access_token)return!1;if(!await a(e.access_token))throw Error("User is not in the required Discord guild")}return!0},session:async({session:e,user:r})=>(e?.user&&(e.user.id=r.id),e)}};function c(...e){return(0,t.getServerSession)(...e,u)}},84908:(e,r,s)=>{"use strict";s.d(r,{A:()=>i});var t=s(96330);let i=global.prisma||new t.PrismaClient({log:["query"]})}};var r=require("../../../../../webpack-runtime.js");r.C(e);var s=e=>r(r.s=e),t=r.X(0,[638,5452,6622,903],()=>s(80216));module.exports=t})();