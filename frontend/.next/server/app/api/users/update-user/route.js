(()=>{var e={};e.id=4446,e.ids=[4446],e.modules={96330:e=>{"use strict";e.exports=require("@prisma/client")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},12412:e=>{"use strict";e.exports=require("assert")},79428:e=>{"use strict";e.exports=require("buffer")},55511:e=>{"use strict";e.exports=require("crypto")},94735:e=>{"use strict";e.exports=require("events")},81630:e=>{"use strict";e.exports=require("http")},55591:e=>{"use strict";e.exports=require("https")},11723:e=>{"use strict";e.exports=require("querystring")},79551:e=>{"use strict";e.exports=require("url")},28354:e=>{"use strict";e.exports=require("util")},74075:e=>{"use strict";e.exports=require("zlib")},37989:(e,r,s)=>{"use strict";s.r(r),s.d(r,{patchFetch:()=>f,routeModule:()=>m,serverHooks:()=>h,workAsyncStorage:()=>g,workUnitAsyncStorage:()=>x});var t={};s.r(t),s.d(t,{POST:()=>l});var i=s(42706),a=s(28203),o=s(45994),n=s(85562),u=s(39187),d=s(84908),c=s(30379);let p=c.z.object({displayName:c.z.string().min(1,"Display Name is required").trim(),realName:c.z.string().optional().nullable().refine(e=>!e||e.trim().length>0,{message:"Real Name must not be empty if provided."}),mainCategoryId:c.z.number().nullable().optional(),interests:c.z.array(c.z.number(),{message:"Interests must be an array of numbers."})});async function l(e){let r;let s=await (0,n.j)();if(!s)return u.NextResponse.json({error:"Unauthorized. Please Login."},{status:401});try{r=await e.json()}catch(e){return console.error(e),u.NextResponse.json({error:"Invalid request payload"},{status:400})}let t=s.user?.id;if(!t)return console.error("User ID not found in session"),u.NextResponse.json({error:"Invalid session. User ID is missing."},{status:400});let i=p.safeParse(r);if(!i.success){let e=i.error.errors.map(e=>e.message).join(", ");return u.NextResponse.json({error:`Validation failed: ${e}`},{status:400})}let{displayName:a,realName:o,mainCategoryId:c,interests:l}=i.data;try{await d.A.user.update({where:{id:t},data:{name:a,realName:""===o?null:o,mainCategoryId:c}}),await d.A.$transaction([d.A.usercategories.deleteMany({where:{userId:t}}),d.A.usercategories.createMany({data:l.map(e=>({userId:t,categoryId:e}))})])}catch(e){return console.error("Unexpected error:",e instanceof Error?e.message:e),u.NextResponse.json({error:"Failed to update user data"},{status:500})}return u.NextResponse.json({success:!0})}let m=new i.AppRouteRouteModule({definition:{kind:a.RouteKind.APP_ROUTE,page:"/api/users/update-user/route",pathname:"/api/users/update-user",filename:"route",bundlePath:"app/api/users/update-user/route"},resolvedPagePath:"C:\\Users\\czhon\\Documents\\GitHub\\SSMCT_Website\\frontend\\src\\app\\api\\users\\update-user\\route.ts",nextConfigOutput:"",userland:t}),{workAsyncStorage:g,workUnitAsyncStorage:x,serverHooks:h}=m;function f(){return(0,o.patchFetch)({workAsyncStorage:g,workUnitAsyncStorage:x})}},96487:()=>{},78335:()=>{},85562:(e,r,s)=>{"use strict";s.d(r,{$:()=>u,j:()=>d});var t=s(51825),i=s(64912),a=s(86259),o=s(84908);let n=async e=>{let r=process.env.DISCORD_GUILD_ID,s=await fetch("https://discord.com/api/v10/users/@me/guilds",{headers:{Authorization:`Bearer ${e}`}});if(!s.ok)throw console.error("Failed to fetch user's Discord guilds"),Error("Failed to fetch user's Discord guilds");return!!(await s.json()).some(e=>e.id===r)||(console.error("User is not in the required Discord guild"),!1)},u={adapter:(0,a.y)(o.A),pages:{signIn:"/",signOut:"/auth/signout",error:"/auth/signin",newUser:"/auth/new_user"},session:{strategy:"database"},providers:[(0,i.A)({clientId:process.env.DISCORD_CLIENT_ID,clientSecret:process.env.DISCORD_CLIENT_SECRET,authorization:{params:{scope:"identify guilds guilds.members.read"}},token:"https://discord.com/api/oauth2/token",userinfo:"https://discord.com/api/users/@me",profile:e=>({id:e.id,name:e.username,image:e.avatar?`https://cdn.discordapp.com/avatars/${e.id}/${e.avatar}.png`:null})})],callbacks:{async signIn({account:e,user:r}){if(!e||!r)return!1;if("discord"===e.provider){if(console.log(e),!e.access_token)return!1;if(!await n(e.access_token))throw Error("User is not in the required Discord guild")}return!0},session:async({session:e,user:r})=>(e?.user&&(e.user.id=r.id),e)}};function d(...e){return(0,t.getServerSession)(...e,u)}},84908:(e,r,s)=>{"use strict";s.d(r,{A:()=>i});var t=s(96330);let i=global.prisma||new t.PrismaClient({log:["query"]})}};var r=require("../../../../webpack-runtime.js");r.C(e);var s=e=>r(r.s=e),t=r.X(0,[638,5452,6622,903],()=>s(37989));module.exports=t})();